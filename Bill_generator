from tkinter import *
import tkinter as tk
from tkinter.scrolledtext import ScrolledText
import requests
from tkinter import messagebox
import random
from datetime import datetime
from tkinter import filedialog

#==================== Functions code starts here ======================

# ==========================  Total Button Code ==========================
def total_bills():

        # ============ Pen Items price ===============
        
        bluepen_price = 20
        blackpen_price = 20
        pencil_price = 10
        marker_price = 50
        # ============== Paper Items Price ==================
        
        notebook_price = 120
        gridsheet_price = 5
        graphpaper_price = 5
        spiral_price = 70

        # ============Pen Item quantity ===================
        
        bluepen_q = bluepen_qty.get()
        blackpen_q = blackpen_qty.get()
        pencil_q = pencil_qty.get()
        marker_q = marker_qty.get()

        # ============= Paper Item quantity ==================
        
        notebook_q = notebook_qty.get()
        gridsheet_q = gridsheet_qty.get()
        graphpaper_q = graphpaper_qty.get()
        spiral_q = spiral_qty.get()


        # ================ Pen Items Validation ====================
        
        if bluepen_var.get() == 0:
                bluepen_q = 0
        elif bluepen_var.get() == 1 and bluepen_qty.get() == "":
                messagebox.showerror("error","Please fill the bluepen quantity")
                bluepen_q = 0

        if blackpen_var.get() == 0:
                blackpen_q = 0
        elif blackpen_var.get() == 1 and blackpen_qty.get() == "":
                messagebox.showerror("error","Please fill the black pen quantity")
                blackpen_q = 0

        if pencil_var.get() == 0:
                pencil_q = 0
        elif pencil_var.get() == 1 and pencil_qty.get() == "":
                messagebox.showerror("error","Please fill the pencil quantity")
                pencil_q = 0
            
        if marker_var.get() == 0:
                marker_q = 0
        elif marker_var.get() == 1 and marker_qty.get() == "":
                messagebox.showerror("error","Please fill the marker quantity")
                redbull_q = 0

          # ================ Paper Items Validation ====================
       

        if notebook_var.get() == 0:
                notebook_q = 0
        elif notebook_var.get() == 1 and notebook_qty.get() == "":
                messagebox.showerror("error","Please fill the Notebook quantity")
                notebook_q = 0
     
        if gridsheet_var.get() == 0:
                gridsheet_q = 0
        elif gridsheet_var.get() == 1 and gridsheet_qty.get() == "":
                messagebox.showerror("error","Please fill the Gridsheet quantity")
                gridsheet_q = 0

        if graphpaper_var.get() == 0:
               graphpaper_q = 0
        elif graphpaper_var.get() == 1 and graphpaper_qty.get() == "":
                messagebox.showerror("error","Please fill the Graphpaper quantity")
                graphpaper_q = 0

        if spiral_var.get() == 0:
                spiral_q = 0
        elif spiral_var.get() == 1 and spiral_qty.get() == "":
                messagebox.showerror("error","Please fill the Spiral Notebook quantity")
                spiral_q = 0
                
        # ============ Total Pens Items Price ===================
        
        total_bluepen_price = bluepen_price * int(bluepen_q)
        total_blackpen_price = blackpen_price * int(blackpen_q)
        total_pencil_price = pencil_price * int(pencil_q)
        total_marker_price = marker_price * int(marker_q)

        # ============ Total Pen cost ===================
        total_pens_cost =  total_bluepen_price + total_blackpen_price + total_pencil_price + total_marker_price

        if pens_cost.get() != "":
                pens_cost.delete(0,"end")
                pens_cost.insert("end",total_pens_cost)
        else:
                pens_cost.insert("end",total_pens_cost)
        
        # ============ Total Paper Items Price ===================
        
        total_notebook_price = notebook_price * int(notebook_q)
        total_gridsheet_price = gridsheet_price * int(gridsheet_q)
        total_graphpaper_price = graphpaper_price * int(graphpaper_q)
        total_spiral_price = spiral_price * int(spiral_q)

         # ============ Total Paper cost ===================
        total_paper_cost = total_notebook_price + total_gridsheet_price + total_graphpaper_price + total_spiral_price

        if paper_cost.get() != "":
                paper_cost.delete(0,"end")
                paper_cost.insert("end",total_paper_cost)
        else:
                paper_cost.insert("end",total_paper_cost)
        
        if service_charge_cost.get() != "":
                service_charge_cost.delete(0,"end")
                service_charge_cost.insert(0,"10")
        else:
                service_charge_cost.insert(0,"10")
        
        fc =  int(paper_cost.get())
        dc = int(pens_cost.get())

        total_paid_tax = fc+dc
        total_paid_tax = total_paid_tax * 8 / 100

        if paid_tax_cost != "":
                paid_tax_cost.delete(0,"end")
                paid_tax_cost.insert(0,total_paid_tax)
        else:
                paid_tax_cost.insert(0,total_paid_tax)
        
        total_sub_cost = fc+dc+int(service_charge_cost.get())

        if sub_total_cost.get() != "":
                sub_total_cost.delete(0,"end")
                sub_total_cost.insert(0,total_sub_cost)
        else:
                sub_total_cost.insert(0,total_sub_cost)


        if total_cost_cost.get() != "":
                total_cost_cost.delete(0,"end")
                total_cost_cost.insert(0,float(total_sub_cost + total_paid_tax))
        else:
                total_cost_cost.insert(0,float(total_sub_cost + total_paid_tax))

        # =====================  Total Bill Receipt ===========================
        date = datetime.now().date()
        if bill_details.get(1.0,"end") != "":
                bill_details.delete(1.0,"end")
                bill_details.insert(1.0,f" Billno-{random.randint(100,1000)}\t{date}  =====================  Items(q) \t Amount  ===================== \n{'Bluepen ('+str(bluepen_q) + ')' + '        ' + str(int(bluepen_q) * bluepen_price) + '  '  if bluepen_var.get() == 1 else ''}{'Blackpen ('+str(blackpen_q) + ')' + '         ' + str(int(blackpen_q) * blackpen_price) + '   '  if blackpen_var.get() == 1 else''}{'Pencil('+str(pencil_q) + ')' + '           ' + str(int(pencil_q) * pencil_price) + '   '  if pencil_var.get() == 1 else''}{'Marker('+str(marker_q) + ')' + '     ' + str(int(marker_q) * marker_price) + '     '  if marker_var.get() == 1 else''}{'A4 Notebook('+str(notebook_q) + ')' + '     ' + str(int(notebook_q) * notebook_price) + '  '  if notebook_var.get() == 1 else''}{'Gridsheet('+str(gridsheet_q) + ')' + '        ' + str(int(gridsheet_q) * gridsheet_price) + '   '  if gridsheet_var.get() == 1 else''}{'Graphpaper('+str(graphpaper_q) + ')' + '        ' + str(int(graphpaper_q) * graphpaper_price) + '   '  if graphpaper_var.get() == 1 else''}{'Spiral Notebook('+str(spiral_q) + ')' + '          ' + str(int(spiral_q) * spiral_price) + '    '  if spiral_var.get() == 1 else''}service charge {service_charge_cost.get()}\n tax paid    {paid_tax_cost.get()}\n ===================== \n total          {total_cost_cost.get()}\n =====================")
        
        # ================== End  =============================
        
# ========= Save button Code ================

def save():
        root.filename = filedialog.asksaveasfile(mode="w",defaultextension='.txt')
        if root.filename is None:
                return
        file_save =  str(bill_details.get(1.0,END))
        root.filename.write(file_save)
        root.filename.close()
        # =========== End =====================
        
# ============= Pens checkbutton validation =================

def bluepen_chk():
        if bluepen_var.get() == 1:
                bluepen_qty['state'] = "normal"
                bluepen_qty['bg'] = '#248aa2'
                bluepen_qty['fg'] = "white"
        else:
                bluepen_qty['state'] = "disabled"

def blackpen_chk():
        if blackpen_var.get() == 1:
                blackpen_qty['state'] = "normal"
                blackpen_qty['bg'] = '#248aa2'
                blackpen_qty['fg'] = "white"
        else:
                blackpen_qty['state'] = "disabled"

def pencil_chk():
        if pencil_var.get() == 1:
                pencil_qty['state'] = "normal"
                pencil_qty['bg'] = '#248aa2'
                pencil_qty['fg'] = "white"
        else:
                pencil_qty['state'] = "disabled"

def marker_chk():
        if marker_var.get() == 1:
                marker_qty['state'] = "normal"
                marker_qty['bg'] = '#248aa2'
                marker_qty['fg'] = "white"
        else:
                marker_qty['state'] = "disabled"
# ================== end==================

# === Foods checkbutton validation ================

def notebook_chk():
        if notebook_var.get() == 1:
                notebook_qty['state'] = "normal"
                notebook_qty['bg'] = '#248aa2'
                notebook_qty['fg'] = "white"
        else:
               notebook_qty['state'] = "disabled"

def gridsheet_chk():
        if gridsheet_var.get() == 1:
                gridsheet_qty['state'] = "normal"
                gridsheet_qty['bg'] = '#248aa2'
                gridsheet_qty['fg'] = "white"
        else:
                gridsheet_qty['state'] = "disabled"

def graphpaper_chk():
        if graphpaper_var.get() == 1:
                graphpaper_qty['state'] = "normal"
                graphpaper_qty['bg'] = '#248aa2'
                graphpaper_qty['fg'] = "white"
        else:
                graphpaper_qty['state'] = "disabled"

def spiral_chk():
        if spiral_var.get() == 1:
                spiral_qty['state'] = "normal"
                spiral_qty['bg'] = '#248aa2'
                spiral_qty['fg'] = "white"
        else:
                spiral_qty['state'] = "disabled"
#============== end ==========================

# ===== Calculator code ================

def nine():
        if 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")
                result.insert("end","9")
        else:
                result.insert("end","9")
                          
def eight():
        if 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")
                result.insert("end","8")
        else:
                result.insert("end","8")

def seven():
        if 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")
                result.insert("end","7")
        else:
                result.insert("end","7")

def six():
        if 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")
                result.insert("end","6")
        else:
                result.insert("end","6")

def five():
        if 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")
                result.insert("end","5")
        else:
                result.insert("end","5")

def four():
        if 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")
                result.insert("end","4")
        else:
                result.insert("end","4")

def three():
        if 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")
                result.insert("end","3")
        else:
                result.insert("end","3")

def two():
        if 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")
                result.insert("end","2")
        else:
                result.insert("end","2")

def one():
        if 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")
                result.insert("end","1")
        else:
                result.insert("end","1")

def zero():
        if 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")
                result.insert("end","0")
        else:
                result.insert("end","0")

def plus():
        if 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")
                result.insert("end","+")
        else:
                result.insert("end","+")

def minus():
        if 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")
                result.insert("end","-")
        else:
                result.insert("end","-")

def mul():
        if 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")
                result.insert("end","*")
        else:
                result.insert("end","*")

def divide():
        if 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")
                result.insert("end","/")
        else:
                result.insert("end","/")

def equal():


        if result.get() == "":
                result.insert("end","error")
        elif result.get()[0] == "0" or result.get()[0] == "+" or result.get()[0] == "*" or result.get()[0] == "/":
                result.delete(0,"end")
                result.insert("end","error")
        elif 'error' in result.get() or '=' in result.get():
                result.delete(0,"end")

        else:
                res = result.get()
                res = eval(res)
                result.insert("end"," = ")
                result.insert("end",res)

def clear():
        result.delete(0,"end")

#========== end ========================

# ====== Send button code ====================
def Send():
        root = tk.Tk()
        root.geometry('300x400')
        root['bg']="white"

        frame4 = Frame(root,width=300,height=60,relief=RIDGE,borderwidth=5,bg='#248aa2',highlightbackground="white", highlightcolor="white", highlightthickness=2)
        frame4.place(x=0,y=0)
                
        l2 = Label(frame4,text="Send Bill",font=('roboto',22,'bold'),bg='#248aa2',fg="#ffffff")
        l2.place(x=85,y=1)

        frame5 = Frame(root,width=300,height=340,relief=RIDGE,borderwidth=5,bg='#248aa2',highlightbackground="white", highlightcolor="white", highlightthickness=2)
        frame5.place(x=0,y=55)

        innerframe5 = Frame(frame5,width=285,height=325,relief=RIDGE,borderwidth=3,bg='#248aa2',highlightbackground="white", highlightcolor="white", highlightthickness=2)        
        innerframe5.place(x=0,y=0)

        l3 = LabelFrame(innerframe5,text="Send Bill Through SMS",width=270,height=310,borderwidth=3,font=('verdana',10,'bold'),fg='#248aa2',relief=RIDGE,highlightbackground="white", highlightcolor="white", highlightthickness=2)
        l3.place(x=2,y=2)

        l4 = Label(innerframe5,text="Phone Number",font=('verdana',10,'bold'))
        l4.place(x=40,y=40)

        number = Entry(innerframe5,width=30,borderwidth=2)
        number.place(x=40,y=70)
        
        l5 = Label(innerframe5,text="Bill Details",font=('verdana',10,'bold'))
        l5.place(x=40,y=100)

        b_detail = ScrolledText(innerframe5,width=23,height=7,relief=RIDGE,borderwidth=3)
        b_detail.place(x=40,y=130) 

        b_detail.insert(1.0,bill_details.get(1.0,END))

        def send_bill():
                ph_number = number.get()
                messages = b_detail.get("1.0","end-1c")

                if ph_number == "":
                        messagebox.showerror("Error",'Please fill the phone number')
                elif messages == "":
                        messagebox.showerror("Error",'Bill Details is empty')
                else:
                        url = "https://www.fast2sms.com/dev/bulk"
                        api="6BWDvRhlI9PoCnj0KcYe3qyHNsftEiFVxSw7Q1aZp4AUk2MLTdfmTltv75YNAGp913Hd62aEuOCPQqJ4"
                        querystring = {"authorization":api,"sender_id":"FSTSMS","message":messages,"language":"english","route":"p","numbers":ph_number}

                        headers = {
                                'cache-control': "no-cache"
                                }
                        requests.request("GET", url, headers=headers, params=querystring)
                                        
                        messagebox.showinfo("Send SMS",'Bill has been sent successfully.')
                
        send_msg = Button(innerframe5,text="Send Bill",relief=RAISED,borderwidth=2,font=('verdana',8,'bold'),bg='#248aa2',fg="white",padx=20,command=send_bill)
        send_msg.place(x=100,y=255)

        root.mainloop()

# ============ end =====================

# ==== Exit button code =================
def exit():
        message = messagebox.askquestion('Notepad',"Do you want to exit the application?")
        if message == "yes":
                root.destroy()
        else:
                "return"
# ======== end =======================


# ==== clear button code ============
def cleared_bill():
        # ========== Pens ===========
        
        bluepen_qty.delete(0,'end')
        bluepen.deselect()
        bluepen_qty['state'] = "disabled"
        
        blackpen_qty.delete(0,'end')
        blackpen.deselect()
        blackpen_qty['state'] = "disabled"
        
        pencil_qty.delete(0,'end')
        pencil.deselect()
        pencil_qty['state'] = "disabled"
        
        marker_qty.delete(0,'end')
        marker.deselect()
        marker_qty['state'] = "disabled"
        # ========== Pens ===========
       
        notebook_qty.delete(0,'end')
        notebook.deselect()
        notebook_qty['state'] = "disabled"
       
        gridsheet_qty.delete(0,'end')
        gridsheet.deselect()
        gridsheet_qty['state'] = "disabled"
        
        graphpaper_qty.delete(0,'end')
        graphpaper.deselect()
        graphpaper_qty['state'] = "disabled"
        
        spiral_qty.delete(0,'end')
        spiral.deselect()
        spiral_qty['state'] = "disabled"
        # ========== Total cost ===========
        pens_cost.delete(0,'end')
        paper_cost.delete(0,'end')
        service_charge_cost.delete(0,'end')
        paid_tax_cost.delete(0,'end')
        sub_total_cost.delete(0,'end')
        total_cost_cost.delete(0,'end')
        # ========== Bill Details ============
        bill_details.delete(1.0,'end')

#======== End =============

# ===== Main Window code =================
root = tk.Tk()
root.geometry('650x400')
root.maxsize(650,390)
root.minsize(650,390)
root.title("Tuck Shop Bill Generator")

frame = Frame(root,width=650,height=70,relief=RIDGE,borderwidth=5,bg='#248aa2')
frame.place(x=0,y=0)

l1 = Label(frame,text="Tuck Shop Bill Generator",font=('roboto',30,'bold'),bg='#248aa2',fg="#ffffff")
l1.place(x=10,y=4)

# ======================================================================

frame1= Frame(root,width=450,height=230,relief=RIDGE,borderwidth=5,bg='#248aa2')
frame1.place(x=0,y=70)

innerframe1 = Frame(frame1,width=150,height=220,relief=RIDGE,borderwidth=3,bg='#248aa2',highlightbackground="white", highlightcolor="white", highlightthickness=2)        
innerframe1.place(x=0,y=0)

pens  = LabelFrame(innerframe1,text="Pen",width=200,height=205,borderwidth=3,font=('verdana',10,'bold'),fg='#248aa2',relief=RIDGE,highlightbackground="white", highlightcolor="white", highlightthickness=2)
pens.place(x=2,y=2)

bluepen_var = IntVar()
bluepen = Checkbutton(pens,text="Blue Pen",variable=bluepen_var,font=('verdana',8,'bold'),onvalue=1,offvalue=0,command=bluepen_chk)
bluepen.place(x=2,y=22)
bluepen_qty = Entry(pens,width=6,borderwidth=4,relief=SUNKEN,state="disabled")
bluepen_qty.place(x=90,y=22)

blackpen_var = IntVar()
blackpen = Checkbutton(pens,text="Black Pen",variable=blackpen_var,font=('verdana',8,'bold'),onvalue=1,offvalue=0,command=blackpen_chk)
blackpen.place(x=2,y=66)
blackpen_qty = Entry(pens,width=6,borderwidth=4,relief=SUNKEN,state="disabled")
blackpen_qty.place(x=90,y=66)

pencil_var = IntVar()
pencil = Checkbutton(pens,text="Pencil",variable=pencil_var,font=('verdana',8,'bold'),onvalue=1,offvalue=0,command=pencil_chk)
pencil.place(x=1,y=110)
pencil_qty = Entry(pens,width=6,borderwidth=4,relief=SUNKEN,state="disabled")
pencil_qty.place(x=90,y=110)

marker_var = IntVar()
marker = Checkbutton(pens,text="Marker",variable=marker_var,font=('verdana',8,'bold'),onvalue=1,offvalue=0,command=marker_chk)
marker.place(x=2,y=154)
marker_qty = Entry(pens,width=6,borderwidth=4,relief=SUNKEN,state="disabled")
marker_qty.place(x=90,y=154)

innerframe2 = Frame(frame1,width=290,height=220,relief=RIDGE,borderwidth=3,bg='#248aa2',highlightbackground="white", highlightcolor="white", highlightthickness=2)        
innerframe2.place(x=151,y=0)

paper  = LabelFrame(innerframe2,text="Paper",width=275,height=205,borderwidth=3,font=('verdana',10,'bold'),fg='#248aa2',relief=RIDGE,highlightbackground="white", highlightcolor="white", highlightthickness=2)
paper.place(x=2,y=2)

notebook_var = IntVar()
notebook = Checkbutton(paper,text="A4 Notebook",variable=notebook_var,font=('verdana',8,'bold'),command=notebook_chk)
notebook.place(x=2,y=22)
notebook_qty = Entry(paper,width=15,borderwidth=4,relief=SUNKEN,state="disabled")
notebook_qty.place(x=140,y=22)

gridsheet_var = IntVar()
gridsheet = Checkbutton(paper,text="Grid Sheet",variable=gridsheet_var,font=('verdana',8,'bold'),command=gridsheet_chk)
gridsheet.place(x=2,y=66)
gridsheet_qty = Entry(paper,width=15,borderwidth=4,relief=SUNKEN,state="disabled")
gridsheet_qty.place(x=140,y=66)

graphpaper_var = IntVar()
graphpaper = Checkbutton(paper,text="Graph Paper",variable=graphpaper_var,font=('verdana',8,'bold'),command=graphpaper_chk)
graphpaper.place(x=2,y=110)
graphpaper_qty = Entry(paper,width=15,borderwidth=4,relief=SUNKEN,state="disabled")
graphpaper_qty.place(x=140,y=110)

spiral_var = IntVar()
spiral = Checkbutton(paper,text="Spiral Notebook",variable=spiral_var,font=('verdana',8,'bold'),command=spiral_chk)
spiral.place(x=2,y=154)
spiral_qty = Entry(paper,width=15,borderwidth=4,relief=SUNKEN,state="disabled")
spiral_qty.place(x=140,y=154)

# =================================================================

frame2= Frame(root,width=450,height=90,relief=RIDGE,borderwidth=5,bg='#248aa2')
frame2.place(x=0,y=300)

innerframe3 = Frame(frame2,width=440,height=80,relief=RIDGE,borderwidth=3,bg='#248aa2',highlightbackground="white", highlightcolor="white", highlightthickness=2)        
innerframe3.place(x=0,y=0)

cost_of_pens = Label(innerframe3,text="Cost of Pens",font=('verdana',8,'bold'))
cost_of_pens.place(x=2,y=2)
pens_cost = Entry(innerframe3,width=13,borderwidth=4,relief=SUNKEN)
pens_cost.place(x=130,y=0)

cost_of_paper = Label(innerframe3,text="Cost of Paper",font=('verdana',8,'bold'))
cost_of_paper.place(x=2,y=24)
paper_cost = Entry(innerframe3,width=13,borderwidth=4,relief=SUNKEN)
paper_cost.place(x=130,y=22)

service_charge = Label(innerframe3,text="G.S.T",font=('verdana',8,'bold'))
service_charge.place(x=2,y=46)
service_charge_cost = Entry(innerframe3,width=13,borderwidth=4,relief=SUNKEN)
service_charge_cost.place(x=130,y=44)


paid_tax = Label(innerframe3,text="Paid Tax",font=('verdana',8,'bold'))
paid_tax.place(x=250,y=2)
paid_tax_cost = Entry(innerframe3,width=13,borderwidth=4,relief=SUNKEN)
paid_tax_cost.place(x=330,y=0)

sub_total = Label(innerframe3,text="Sub Total",font=('verdana',8,'bold'))
sub_total.place(x=250,y=24)
sub_total_cost = Entry(innerframe3,width=13,borderwidth=4,relief=SUNKEN)
sub_total_cost.place(x=330,y=22)

total_cost = Label(innerframe3,text="Total Cost",font=('verdana',8,'bold'))
total_cost.place(x=250,y=46)
total_cost_cost = Entry(innerframe3,width=13,borderwidth=4,relief=SUNKEN)
total_cost_cost.place(x=330,y=44)

#===================Save Send Exit Frame=========================================================

frame3= Frame(root,width=200,height=320,relief=RIDGE,borderwidth=5,bg='#248aa2')
frame3.place(x=450,y=70)

innerframe4 = Frame(frame3,width=190,height=310,relief=RIDGE,borderwidth=3,bg='#248aa2',highlightbackground="white", highlightcolor="white", highlightthickness=2)        
innerframe4.place(x=0,y=0)

result = Entry(innerframe4,width=28,relief=SUNKEN,borderwidth=3)
result.place(x=2,y=0)

nine = Button(innerframe4,text="9",padx=15,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='#248aa2',fg="white",command=nine)
nine.place(x=0,y=24)
eight = Button(innerframe4,text="8",padx=15,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='#248aa2',fg="white",command=eight)
eight.place(x=48,y=24)
seven = Button(innerframe4,text="7",padx=15,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='#248aa2',fg="white",command=seven)
seven.place(x=96,y=24)
plus = Button(innerframe4,text="+",padx=6,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='white',fg="black",command=plus)
plus.place(x=144,y=24)

six = Button(innerframe4,text="6",padx=15,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='#248aa2',fg="white",command=six)
six.place(x=0,y=50)
five = Button(innerframe4,text="5",padx=15,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='#248aa2',fg="white",command=five)
five.place(x=48,y=50)
four = Button(innerframe4,text="4",padx=15,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='#248aa2',fg="white",command=four)
four.place(x=96,y=50)
minus = Button(innerframe4,text="-",padx=8,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='white',fg="black",command=minus)
minus.place(x=144,y=50)

three = Button(innerframe4,text="3",padx=15,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='#248aa2',fg="white",command=three)
three.place(x=0,y=76)
two = Button(innerframe4,text="2",padx=15,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='#248aa2',fg="white",command=two)
two.place(x=48,y=76)
one = Button(innerframe4,text="1",padx=15,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='#248aa2',fg="white",command=one)
one.place(x=96,y=76)
multiply = Button(innerframe4,text="*",padx=7,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='white',fg="black",command=mul)
multiply.place(x=144,y=76)

zero = Button(innerframe4,text="0",padx=15,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='#248aa2',fg="white",command=zero)
zero.place(x=0,y=102)
clear = Button(innerframe4,text="C",padx=15,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='#248aa2',fg="white",command=clear)
clear.place(x=48,y=102)
equal = Button(innerframe4,text="=",padx=15,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='#248aa2',fg="white",command=equal)
equal.place(x=96,y=102)
divide = Button(innerframe4,text="/",padx=7,relief=RAISED,borderwidth=2,font=('verdana',10,'bold'),bg='white',fg="black",command=divide)
divide.place(x=144,y=102)

bill_details = ScrolledText(innerframe4,width=23,height=9,relief=SUNKEN,borderwidth=3,font=('courier',9,''))
bill_details.place(x=0,y=130)

total = Button(innerframe4,text="Total",relief=RAISED,borderwidth=2,font=('verdana',8,'bold'),bg='#248aa2',fg="white",command=total_bills)
total.place(x=0,y=275)

save = Button(innerframe4,text="Save",relief=RAISED,borderwidth=2,font=('verdana',8,'bold'),bg='#248aa2',fg="white",command=save)
save.place(x=43,y=275)

send = Button(innerframe4,text="Send",relief=RAISED,borderwidth=2,font=('verdana',8,'bold'),bg='#248aa2',fg="white",command=Send)
send.place(x=82,y=275)

exit = Button(innerframe4,text="Exit",relief=RAISED,borderwidth=2,font=('verdana',8,'bold'),bg='#248aa2',fg="white",command=exit)
exit.place(x=124,y=275)

clr = Button(innerframe4,text="C",relief=RAISED,borderwidth=2,font=('verdana',8,'bold'),bg='#248aa2',fg="white",command=cleared_bill)
clr.place(x=160,y=275)

root.mainloop()

